Channels in Go are powerful tools for synchronizing and communicating 
between goroutines. They allow you to send and receive values, ensuring 
safe data exchange. Letâ€™s look at an example that 
explains how channels work.

package main

import (
    "fmt"
    "time"
)

// Function to send messages on a channel
func sendMessage(channel chan string) {
    messages := []string{"Hello", "from", "the", "goroutine"}
    for _, msg := range messages {
        channel <- msg
        time.Sleep(500 * time.Millisecond) // Simulate some work
    }
    close(channel) // Close the channel when done
}

func main() {
    // Create a new channel
    messageChannel := make(chan string)

    // Launch a goroutine
    go sendMessage(messageChannel)

    // Receive messages from the channel
    for msg := range messageChannel {
        fmt.Println(msg)
    }

    fmt.Println("All messages received.")
}
