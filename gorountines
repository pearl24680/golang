Goroutines are a powerful feature in Go that allow for concurrent
execution of functions. They are lightweight threads
managed by the Go runtime. 

package main

import (
    "fmt"
    "time"
)

// Function to print a message
func printMessage(message string) {
    for i := 0; i < 5; i++ {
        fmt.Println(message, i)
        time.Sleep(100 * time.Millisecond)
    }
}

func main() {
    // Launching the first goroutine
    go printMessage("Goroutine 1")

    // Launching the second goroutine
    go printMessage("Goroutine 2")

    // Main goroutine
    printMessage("Main goroutine")
}
